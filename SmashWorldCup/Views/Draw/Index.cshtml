@model List<CharacterModel>

@{
    ViewData["Title"] = "Group Stage Draws";
}

@await Component.InvokeAsync("NavigationBar")

<select id="characters" style="display: none">
    @foreach(var character in Model)
    {
        <option value="@character.ID">@character.Name</option>
    }
</select>

<h1>Group Stage Draws</h1> <br />
@using(Html.BeginForm("FinalsDraw", "Draws"))
{
    <input type="button" id="drawButton" value="Finals Draw" style="display: block"/>
}

<input type="text" id="drawnCharacter" />
<input type="button" id="drawButton" value="Draw" style="display: block" onclick="drawNumber()"/>
<select id="drawsList" style="display: none"></select>

<script>
    function drawNumber()
    {
        var characters = document.getElementById("characters");
        var drawnCharacter = document.getElementById("drawnCharacter");
        var characterNumbers = characters.children;

        let randomNumber = Math.floor(Math.random() * characters.options.length);

        drawnCharacter.value = characterNumbers[randomNumber].text;
        characters.options.remove(randomNumber);

        //var drawsList = document.getElementById("drawsList");
        //var option = document.createElement("option");
        //option.value = randomNumber;
        //option.text = "Option";
        //drawsList.add(option);

        drawnId.value = characters.options.length;

        if(characters.options.length === 0) {
            document.getElementById("drawButton").style.display = "none";
        };

    };
</script>